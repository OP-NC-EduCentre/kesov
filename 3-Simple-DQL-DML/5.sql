--5.1 Для однієї з таблиць, що містить обмеження цілісності зовнішнього ключа, виконати
--команду зміни значення колонки зовнішнього ключа на значення, яке відсутнє в колонці
--первинного ключа відповідної таблиці. Перевірити реакцію СКБД на таку зміну.

UPDATE Estate
set owner = 10
where estate_id = 301;
--5.2 Повторити рішення завдання 5.1, але таке, що не призводить до порушення цілісності
--зовнішнього ключа.
UPDATE Estate
set owner = 4
where estate_id = 301;
--5.3Для однієї з таблиць, що містить обмеження цілісності первинного ключа, пов'язане з
--колонкою зовнішнього ключа іншої таблиці, виконати одну команду видалення рядка зі значенням
--колонки первинного ключа, що є в колонці зовнішнього ключа іншої таблиці. Перевірити реакцію
--СКБД видалення.
delete from Owners
where owner_id=4;
--5.4Повторити рішення завдання 5.3, але таке, що не призводить до порушення цілісності
--зовнішнього ключа.
delete from Owners
where owner_id=3;
--5.5Для однієї з таблиць, що містить обмеження цілісності первинного ключа, виконати
--команду зміни значення колонки первинного ключа на значення, яке присутнє у колонці
--зовнішнього ключа відповідної таблиці. Перевірити реакцію СКБД на таку зміну.
UPDATE Owners 
set owner_id = 6 
where owner_id=4;

--5.6Повторити рішення завдання 5.5, але таке, що не призводить до порушення цілісності
--зовнішнього ключа, тобто виконати команду зміни значення колонки первинного ключа на
--значення, яке вже не присутнє у колонці зовнішнього ключа відповідної таблиці.
SELECT * from Estate;
UPDATE Owners
set owner_id=6
where owner_id=5;